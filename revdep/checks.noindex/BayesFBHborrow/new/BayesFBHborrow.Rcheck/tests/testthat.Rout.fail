
R version 4.5.1 (2025-06-13) -- "Great Square Root"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # This file is part of the standard setup for testthat.
> # It is recommended that you do not modify it.
> #
> # Where should you do additional test configuration?
> # Learn more about the roles of various files in:
> # * https://r-pkgs.org/testing-design.html#sec-tests-files-overview
> # * https://testthat.r-lib.org/articles/special-files.html
> 
> library(testthat)
> library(BayesFBHborrow)
> 
> test_check("BayesFBHborrow")
[ FAIL 11 | WARN 0 | SKIP 0 | PASS 572 ]

══ Failed tests ════════════════════════════════════════════════════════════════
── Error ('test-GibbsMH_WBorrow.R:61:3'): Gibbs_WBorrow: output parameters are correct ──
Error in `if (shape <= 0.01) {
    warning("`rinvgamma()` is unreliable for `shape` <= .01.", 
        call. = FALSE, immediate. = TRUE)
}`: the condition has length > 1
Backtrace:
    ▆
 1. ├─BayesFBHborrow::GibbsMH(...) at test-GibbsMH_WBorrow.R:61:3
 2. └─BayesFBHborrow:::GibbsMH.WBorrow(...)
 3.   └─BayesFBHborrow:::.tau_update(...)
 4.     └─invgamma::rinvgamma(n = J + 1, shape = ac[call], rate = bd[call])
── Error ('test-GibbsMH_WBorrow.R:99:3'): Gibbs_MH_WBorrow runs for mixture borrowing ──
Error in `if (shape <= 0.01) {
    warning("`rinvgamma()` is unreliable for `shape` <= .01.", 
        call. = FALSE, immediate. = TRUE)
}`: the condition has length > 1
Backtrace:
    ▆
 1. ├─testthat::expect_true(...) at test-GibbsMH_WBorrow.R:99:3
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─BayesFBHborrow::GibbsMH(...)
 5. └─BayesFBHborrow:::GibbsMH.WBorrow(...)
 6.   └─BayesFBHborrow:::.tau_update(...)
 7.     └─invgamma::rinvgamma(n = J + 1, shape = ac[call], rate = bd[call])
── Error ('test-GibbsMH_WBorrow.R:213:3'): Gibbs_MH_WBorrow runs for default parameter values ──
Error in `if (shape <= 0.01) {
    warning("`rinvgamma()` is unreliable for `shape` <= .01.", 
        call. = FALSE, immediate. = TRUE)
}`: the condition has length > 1
Backtrace:
    ▆
 1. ├─testthat::expect_true(...) at test-GibbsMH_WBorrow.R:213:3
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─BayesFBHborrow::GibbsMH(Y, I, X, Y_0, I_0, X_0, tuning_parameters)
 5. └─BayesFBHborrow:::GibbsMH.WBorrow(Y, I, X, Y_0, I_0, X_0, tuning_parameters)
 6.   └─BayesFBHborrow:::.tau_update(...)
 7.     └─invgamma::rinvgamma(n = J + 1, shape = ac[call], rate = bd[call])
── Error ('test-GibbsMH_WBorrow.R:288:3'): Gibbs_MH_WBorrow runs for covariates on historical data ──
Error in `if (shape <= 0.01) {
    warning("`rinvgamma()` is unreliable for `shape` <= .01.", 
        call. = FALSE, immediate. = TRUE)
}`: the condition has length > 1
Backtrace:
    ▆
 1. ├─testthat::expect_true(...) at test-GibbsMH_WBorrow.R:288:3
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─BayesFBHborrow::GibbsMH(...)
 5. └─BayesFBHborrow:::GibbsMH.WBorrow(...)
 6.   └─BayesFBHborrow:::.tau_update(...)
 7.     └─invgamma::rinvgamma(n = J + 1, shape = ac[call], rate = bd[call])
── Failure ('test-posterior_updates.R:109:3'): tau updates correctly ───────────
Expected `.tau_update(...)` to run without any errors.
i Actually got a <simpleError> with text:
  the condition has length > 1
── Error ('test-posterior_updates.R:111:3'): tau updates correctly ─────────────
Error in `if (shape <= 0.01) {
    warning("`rinvgamma()` is unreliable for `shape` <= .01.", 
        call. = FALSE, immediate. = TRUE)
}`: the condition has length > 1
Backtrace:
    ▆
 1. └─BayesFBHborrow:::.tau_update(...) at test-posterior_updates.R:111:3
 2.   └─invgamma::rinvgamma(n = J + 1, shape = ac[call], rate = bd[call])
── Error ('test-run_mcmc.R:34:3'): BayesFBHborrow works correctly for a normal input (with historical covariates) ──
Error in `if (shape <= 0.01) {
    warning("`rinvgamma()` is unreliable for `shape` <= .01.", 
        call. = FALSE, immediate. = TRUE)
}`: the condition has length > 1
Backtrace:
     ▆
  1. ├─base::suppressMessages(...) at test-run_mcmc.R:34:3
  2. │ └─base::withCallingHandlers(...)
  3. ├─testthat::expect_message(...)
  4. │ └─testthat:::expect_condition_matching(...)
  5. │   └─testthat:::quasi_capture(...)
  6. │     ├─testthat (local) .capture(...)
  7. │     │ └─base::withCallingHandlers(...)
  8. │     └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  9. ├─testthat::expect_message(...)
 10. │ └─testthat:::expect_condition_matching(...)
 11. │   └─testthat:::quasi_capture(...)
 12. │     ├─testthat (local) .capture(...)
 13. │     │ └─base::withCallingHandlers(...)
 14. │     └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
 15. ├─BayesFBHborrow::BayesFBHborrow(...)
 16. └─BayesFBHborrow:::BayesFBHborrow.WBorrow(...)
 17.   ├─BayesFBHborrow::GibbsMH(...)
 18.   └─BayesFBHborrow:::GibbsMH.WBorrow(...)
 19.     └─BayesFBHborrow:::.tau_update(...)
 20.       └─invgamma::rinvgamma(n = J + 1, shape = ac[call], rate = bd[call])
── Failure ('test-run_mcmc.R:60:3'): BayesFBHborrow fails for wrong type of input ──
Expected `BayesFBHborrow(...)` to run without any errors.
i Actually got a <simpleError> with text:
  the condition has length > 1
── Failure ('test-run_mcmc.R:87:3'): default values still hold (WBorrow) ───────
Expected `BayesFBHborrow(data, data_hist, iter = 50, warmup_iter = 10)` to run without any errors.
i Actually got a <simpleError> with text:
  the condition has length > 1
Backtrace:
    ▆
 1. ├─base::suppressMessages(...) at test-run_mcmc.R:87:3
 2. │ └─base::withCallingHandlers(...)
 3. └─testthat::expect_no_error(...)
── Error ('test-run_mcmc.R:189:3'): Output class is correct ────────────────────
Error in `if (shape <= 0.01) {
    warning("`rinvgamma()` is unreliable for `shape` <= .01.", 
        call. = FALSE, immediate. = TRUE)
}`: the condition has length > 1
Backtrace:
    ▆
 1. ├─BayesFBHborrow::BayesFBHborrow(...) at test-run_mcmc.R:189:3
 2. └─BayesFBHborrow:::BayesFBHborrow.WBorrow(...)
 3.   ├─BayesFBHborrow::GibbsMH(...)
 4.   └─BayesFBHborrow:::GibbsMH.WBorrow(...)
 5.     └─BayesFBHborrow:::.tau_update(...)
 6.       └─invgamma::rinvgamma(n = J + 1, shape = ac[call], rate = bd[call])
── Error ('test-run_mcmc.R:267:3'): produces the correct amount of plots ───────
Error in `if (shape <= 0.01) {
    warning("`rinvgamma()` is unreliable for `shape` <= .01.", 
        call. = FALSE, immediate. = TRUE)
}`: the condition has length > 1
Backtrace:
    ▆
 1. ├─BayesFBHborrow::BayesFBHborrow(...) at test-run_mcmc.R:267:3
 2. └─BayesFBHborrow:::BayesFBHborrow.WBorrow(...)
 3.   ├─BayesFBHborrow::GibbsMH(...)
 4.   └─BayesFBHborrow:::GibbsMH.WBorrow(...)
 5.     └─BayesFBHborrow:::.tau_update(...)
 6.       └─invgamma::rinvgamma(n = J + 1, shape = ac[call], rate = bd[call])

[ FAIL 11 | WARN 0 | SKIP 0 | PASS 572 ]
Error: Test failures
Execution halted
